digraph AST {
node0 [label="<program>",lexeme=""];
node1 [label="<function_decl>",lexeme=""];
node2 [label="int",lexeme=""];
node1 -> node2;
node3 [label="ID",lexeme="add"];
node1 -> node3;
node4 [label="<args>",lexeme=""];
node5 [label="<arg>",lexeme=""];
node6 [label="int",lexeme=""];
node5 -> node6;
node7 [label="ID",lexeme="a"];
node5 -> node7;
node4 -> node5;
node8 [label="<arg>",lexeme=""];
node9 [label="int",lexeme=""];
node8 -> node9;
node10 [label="ID",lexeme="b"];
node8 -> node10;
node4 -> node8;
node1 -> node4;
node11 [label="<stmts>",lexeme=""];
node12 [label="RETURN",lexeme=""];
node13 [label="PLUS",lexeme=""];
node14 [label="ID",lexeme="a"];
node13 -> node14;
node15 [label="ID",lexeme="b"];
node13 -> node15;
node12 -> node13;
node11 -> node12;
node1 -> node11;
node0 -> node1;
node16 [label="<function_decl>",lexeme=""];
node17 [label="int",lexeme=""];
node16 -> node17;
node18 [label="ID",lexeme="main"];
node16 -> node18;
node19 [label="<args>",lexeme=""];
node16 -> node19;
node20 [label="<stmts>",lexeme=""];
node21 [label="<var_decl>",lexeme=""];
node22 [label="ID",lexeme="x"];
node21 -> node22;
node23 [label="INTLITERAL",lexeme="15"];
node21 -> node23;
node20 -> node21;
node24 [label="<var_decl>",lexeme=""];
node25 [label="ID",lexeme="y"];
node24 -> node25;
node26 [label="INTLITERAL",lexeme="16"];
node24 -> node26;
node20 -> node24;
node27 [label="<func call>",lexeme=""];
node28 [label="ID",lexeme="print_int"];
node27 -> node28;
node29 [label="<exps>",lexeme=""];
node30 [label="<func call>",lexeme=""];
node31 [label="ID",lexeme="add"];
node30 -> node31;
node32 [label="<exps>",lexeme=""];
node33 [label="ID",lexeme="x"];
node32 -> node33;
node34 [label="ID",lexeme="y"];
node32 -> node34;
node30 -> node32;
node29 -> node30;
node27 -> node29;
node20 -> node27;
node35 [label="RETURN",lexeme=""];
node36 [label="INTLITERAL",lexeme="0"];
node35 -> node36;
node20 -> node35;
node16 -> node20;
node0 -> node16;
}